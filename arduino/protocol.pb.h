/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_PROTOCOL_PROTOCOL_PB_H_INCLUDED
#define PB_PROTOCOL_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _protocol_Direction {
    protocol_Direction_CLOCKWISE = 0,
    protocol_Direction_COUNTERCLOCKWISE = 1
} protocol_Direction;

/* Struct definitions */
typedef struct _protocol_RotaryChange {
    bool has_index;
    int32_t index;
    bool has_direction;
    protocol_Direction direction;
} protocol_RotaryChange;

typedef struct _protocol_ButtonChange {
    bool has_index;
    int32_t index;
    bool has_pressed;
    bool pressed;
} protocol_ButtonChange;

typedef struct _protocol_Message {
    pb_size_t which_payload;
    union _protocol_Message_payload {
        protocol_RotaryChange rotary_change;
        protocol_ButtonChange button_change;
    } payload;
} protocol_Message;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _protocol_Direction_MIN protocol_Direction_CLOCKWISE
#define _protocol_Direction_MAX protocol_Direction_COUNTERCLOCKWISE
#define _protocol_Direction_ARRAYSIZE ((protocol_Direction)(protocol_Direction_COUNTERCLOCKWISE+1))


#define protocol_RotaryChange_direction_ENUMTYPE protocol_Direction



/* Initializer values for message structs */
#define protocol_Message_init_default            {0, {protocol_RotaryChange_init_default}}
#define protocol_RotaryChange_init_default       {false, 0, false, _protocol_Direction_MIN}
#define protocol_ButtonChange_init_default       {false, 0, false, 0}
#define protocol_Message_init_zero               {0, {protocol_RotaryChange_init_zero}}
#define protocol_RotaryChange_init_zero          {false, 0, false, _protocol_Direction_MIN}
#define protocol_ButtonChange_init_zero          {false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define protocol_RotaryChange_index_tag          1
#define protocol_RotaryChange_direction_tag      2
#define protocol_ButtonChange_index_tag          1
#define protocol_ButtonChange_pressed_tag        2
#define protocol_Message_rotary_change_tag       1
#define protocol_Message_button_change_tag       2

/* Struct field encoding specification for nanopb */
#define protocol_Message_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,rotary_change,payload.rotary_change),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,button_change,payload.button_change),   2)
#define protocol_Message_CALLBACK NULL
#define protocol_Message_DEFAULT NULL
#define protocol_Message_payload_rotary_change_MSGTYPE protocol_RotaryChange
#define protocol_Message_payload_button_change_MSGTYPE protocol_ButtonChange

#define protocol_RotaryChange_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    index,             1) \
X(a, STATIC,   OPTIONAL, UENUM,    direction,         2)
#define protocol_RotaryChange_CALLBACK NULL
#define protocol_RotaryChange_DEFAULT NULL

#define protocol_ButtonChange_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    index,             1) \
X(a, STATIC,   OPTIONAL, BOOL,     pressed,           2)
#define protocol_ButtonChange_CALLBACK NULL
#define protocol_ButtonChange_DEFAULT NULL

extern const pb_msgdesc_t protocol_Message_msg;
extern const pb_msgdesc_t protocol_RotaryChange_msg;
extern const pb_msgdesc_t protocol_ButtonChange_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define protocol_Message_fields &protocol_Message_msg
#define protocol_RotaryChange_fields &protocol_RotaryChange_msg
#define protocol_ButtonChange_fields &protocol_ButtonChange_msg

/* Maximum encoded size of messages (where known) */
#define PROTOCOL_PROTOCOL_PB_H_MAX_SIZE          protocol_Message_size
#define protocol_ButtonChange_size               13
#define protocol_Message_size                    15
#define protocol_RotaryChange_size               13

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
